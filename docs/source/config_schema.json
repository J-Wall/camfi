{
  "title": "CamfiConfig",
  "description": "Camfi configuration.",
  "type": "object",
  "properties": {
    "root": {
      "title": "Root",
      "description": "Directory containing all images for the project.",
      "default": ".",
      "format": "directory-path",
      "type": "string"
    },
    "disable_progress_bar": {
      "title": "Disable Progress Bar",
      "description": "Disables progress bars. By default, disable on non-TTY.",
      "type": "boolean"
    },
    "via_project_file": {
      "title": "Via Project File",
      "description": "Path to file containing VIA project.",
      "format": "file-path",
      "type": "string"
    },
    "day_zero": {
      "title": "Day Zero",
      "description": "Used as reference date for plotting etc.",
      "type": "string",
      "format": "date"
    },
    "output_tz": {
      "title": "Timezone",
      "description": "Sets a global timezone used for various analyses.",
      "pattern": "^Z|[+-]\\d{2}(?::?\\d{2})?$",
      "examples": [
        "Z",
        "+10:00",
        "-05"
      ],
      "type": "string"
    },
    "camera": {
      "$ref": "#/definitions/CameraConfig"
    },
    "time": {
      "$ref": "#/definitions/LocationTimeCollector"
    },
    "place": {
      "$ref": "#/definitions/LocationWeatherStationCollector"
    },
    "wingbeat_extraction": {
      "$ref": "#/definitions/WingbeatExtractorConfig"
    },
    "annotator": {
      "$ref": "#/definitions/AnnotatorConfig"
    }
  },
  "definitions": {
    "CameraConfig": {
      "title": "CameraConfig",
      "description": "Camera hardware-related configuration.",
      "type": "object",
      "properties": {
        "camera_time_to_actual_time_ratio": {
          "title": "Camera Time To Actual Time Ratio",
          "description": "Used for correcting timestamps from an inaccurate clock.",
          "type": "number"
        },
        "line_rate": {
          "title": "Line Rate",
          "description": "Rolling-shutter line rate of camera (lines per second).",
          "exclusiveMinimum": 0,
          "type": "number"
        }
      }
    },
    "LocationTime": {
      "description": "Camera placement data",
      "type": "object",
      "properties": {
        "camera_start_time": {
          "title": "Camera Start Time",
          "description": "Camera placement datetime (according to camera's clock).",
          "type": "string",
          "format": "date-time"
        },
        "actual_start_time": {
          "title": "Actual Start Time",
          "description": "Actual camera placement datetime (defaults to camera_start_time).",
          "type": "string",
          "format": "date-time"
        },
        "camera_end_time": {
          "title": "Camera End Time",
          "description": "Camera retrieval time (according to camera's clock).",
          "type": "string",
          "format": "date-time"
        },
        "actual_end_time": {
          "title": "Actual End Time",
          "description": "Actual camera retrieval time.",
          "type": "string",
          "format": "date-time"
        },
        "location": {
          "title": "Location",
          "description": "Name of location the camera was placed in.",
          "type": "string"
        }
      },
      "required": [
        "camera_start_time"
      ]
    },
    "LocationTimeCollector": {
      "title": "LocationTimeCollector",
      "description": "Contains data for multiple camera placements.",
      "type": "object",
      "properties": {
        "camera_placements": {
          "title": "Camera Placements",
          "description": "Mapping from sub-directories containing images to LocationTime instances.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LocationTime"
          }
        }
      },
      "required": [
        "camera_placements"
      ]
    },
    "Location": {
      "title": "Location",
      "description": "Contains spatial data on locations, including timezone.",
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "Name of location. Used to link to camera placements.",
          "type": "string"
        },
        "lat": {
          "title": "Lat",
          "description": "Decimal latitude.",
          "type": "number"
        },
        "lon": {
          "title": "Lon",
          "description": "Decimal longitude.",
          "type": "number"
        },
        "elevation_m": {
          "title": "Elevation M",
          "description": "Elevation in metres.",
          "minimum": 0,
          "type": "number"
        },
        "tz": {
          "title": "Timezone",
          "description": "ISO8601 timezone offset.",
          "pattern": "^Z|[+-]\\d{2}(?::?\\d{2})?$",
          "examples": [
            "Z",
            "+10:00",
            "-05"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "lat",
        "lon",
        "elevation_m",
        "tz"
      ]
    },
    "WeatherStation": {
      "title": "WeatherStation",
      "description": "Contains information on a weather station.",
      "type": "object",
      "properties": {
        "location": {
          "title": "Location",
          "description": "Location of weather station.",
          "allOf": [
            {
              "$ref": "#/definitions/Location"
            }
          ]
        },
        "data_file": {
          "title": "Data File",
          "description": "Path to csv file containing weather data from weather station.",
          "format": "file-path",
          "type": "string"
        }
      },
      "required": [
        "location",
        "data_file"
      ]
    },
    "LocationWeatherStationCollector": {
      "title": "LocationWeatherStationCollector",
      "description": "Defines Locations and Weather stations.",
      "type": "object",
      "properties": {
        "locations": {
          "title": "Locations",
          "description": "List of locations where cameras have been placed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          }
        },
        "weather_stations": {
          "title": "Weather Stations",
          "description": "List of weather stations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeatherStation"
          }
        },
        "location_weather_station_mapping": {
          "title": "Location Weather Station Mapping",
          "description": "A mapping between location names and weather_station names.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "locations",
        "weather_stations",
        "location_weather_station_mapping"
      ]
    },
    "WingbeatExtractorConfig": {
      "title": "WingbeatExtractorConfig",
      "description": "Contains configurable parameters for WingbeatExtractor.",
      "type": "object",
      "properties": {
        "device": {
          "title": "Device",
          "description": "Using GPU ('cuda') can give 4x speedups for certain operations.",
          "default": "cpu",
          "type": "string"
        },
        "backup_device": {
          "title": "Backup Device",
          "description": "Used when computation fails on main device due to memory limit.",
          "type": "string"
        },
        "scan_distance": {
          "title": "Scan Distance",
          "description": "Max. distance from polyline used for wingbeat extraction.",
          "default": 50,
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        "max_pixel_period": {
          "title": "Max Pixel Period",
          "description": "Max. pixel period to check during wingbeat extraction.",
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        "force_load_exif_metadata": {
          "title": "Force Load Exif Metadata",
          "description": "Forces EXIF metadata to be read from image instead of ViaProject.",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "BoundingBox": {
      "title": "BoundingBox",
      "description": "Defines a bounding box with integer (pixel) coordinates.",
      "type": "object",
      "properties": {
        "x0": {
          "title": "X0",
          "description": "Minimum inclusive (horizontal) x-coordinate of box.",
          "minimum": 0,
          "type": "integer"
        },
        "y0": {
          "title": "Y0",
          "description": "Minimum inclusive (vertical) y-coordinate of box.",
          "minimum": 0,
          "type": "integer"
        },
        "x1": {
          "title": "X1",
          "description": "Maximum exclusive (horizontal) x-coordinate of box.",
          "minimum": 0,
          "type": "integer"
        },
        "y1": {
          "title": "Y1",
          "description": "Maximum exclusive (vertical) y-coordinate of box.",
          "minimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "x0",
        "y0",
        "x1",
        "y1"
      ]
    },
    "MaskMaker": {
      "title": "MaskMaker",
      "description": "Contains settings for segmentation mask generation.",
      "type": "object",
      "properties": {
        "shape": {
          "title": "Shape",
          "description": "Shape of images (height, width) in pixels.",
          "type": "array",
          "items": [
            {
              "type": "integer",
              "exclusiveMinimum": 0
            },
            {
              "type": "integer",
              "exclusiveMinimum": 0
            }
          ]
        },
        "mask_dilate": {
          "title": "Mask Dilate",
          "description": "Morphological dilation to apply to segmentation skeletons.",
          "exclusiveMinimum": 0,
          "type": "integer"
        }
      },
      "required": [
        "shape"
      ]
    },
    "TrainingConfig": {
      "title": "TrainingConfig",
      "description": "Contains settings for camfi annotator model training.",
      "type": "object",
      "properties": {
        "mask_maker": {
          "$ref": "#/definitions/MaskMaker"
        },
        "min_annotations": {
          "title": "Min Annotations",
          "description": "Only train on images which have at least this many annotations.",
          "type": "integer"
        },
        "max_annotations": {
          "title": "Max Annotations",
          "description": "Only train on images which have at most this many annotations.",
          "type": "integer"
        },
        "box_margin": {
          "title": "Box Margin",
          "description": "Margin to add to bounding boxes of object annotations.",
          "default": 10,
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        "test_set_file": {
          "title": "Test Set File",
          "description": "Contains filepaths (one per line). Do not set if test_set is set.",
          "format": "file-path",
          "type": "string"
        },
        "test_set": {
          "title": "Test Set",
          "description": "List of images to exclude from training.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string",
            "format": "path"
          }
        },
        "load_pretrained_model": {
          "title": "Load Pretrained Model",
          "description": "Path or url to model parameters file to initialise training.",
          "anyOf": [
            {
              "type": "string",
              "format": "path"
            },
            {
              "type": "string"
            }
          ]
        },
        "device": {
          "title": "Device",
          "description": "Device to run training on (e.g. cuda or cpu).",
          "default": "cpu",
          "type": "string"
        },
        "batch_size": {
          "title": "Batch Size",
          "description": "Number of images to load at once.",
          "default": 5,
          "type": "integer"
        },
        "num_workers": {
          "title": "Num Workers",
          "description": "Number of worker processes for data loader to spawn.",
          "default": 2,
          "type": "integer"
        },
        "num_epochs": {
          "title": "Num Epochs",
          "description": "Number of epochs to train.",
          "default": 10,
          "type": "integer"
        },
        "outdir": {
          "title": "Outdir",
          "description": "Path to directory where to save model(s).",
          "default": ".",
          "format": "directory-path",
          "type": "string"
        },
        "model_name": {
          "title": "Model Name",
          "description": "Identifier to include in model save file. Default YYYYmmdd.",
          "type": "string"
        },
        "save_intermediate": {
          "title": "Save Intermediate",
          "description": "If True, model is saved after each epoch.",
          "default": false,
          "type": "boolean"
        }
      }
    },
    "InferenceConfig": {
      "title": "InferenceConfig",
      "description": "Contains settings for camfi annotator inference.",
      "type": "object",
      "properties": {
        "output_path": {
          "title": "Output Path",
          "description": "If set, automatically generated annotations will be saved to file.",
          "type": "string",
          "format": "path"
        },
        "model": {
          "title": "Model",
          "description": "Path or url to model .pth file or one of camfi.models.model_urls.",
          "default": "release",
          "examples": [
            "v1",
            "release"
          ],
          "anyOf": [
            {
              "type": "string",
              "format": "path"
            },
            {
              "type": "string"
            }
          ]
        },
        "device": {
          "title": "Device",
          "description": "Specifies device to run inference on.",
          "default": "cpu",
          "examples": [
            "cpu",
            "cuda"
          ],
          "type": "string"
        },
        "backup_device": {
          "title": "Backup Device",
          "description": "Used for images which fail on device due to memory constraints.",
          "type": "string"
        },
        "split_angle": {
          "title": "Split Angle",
          "description": "Approximate maximum angle between polyline segments in degrees.",
          "default": 15.0,
          "exclusiveMinimum": 0,
          "type": "number"
        },
        "poly_order": {
          "title": "Poly Order",
          "description": "Order of polynomial used for fitting motion blur paths.",
          "default": 2,
          "exclusiveMinimum": 0,
          "type": "integer"
        },
        "endpoint_method": {
          "title": "Endpoint Method",
          "description": "Method to find endpoints of motion blurs.",
          "default": "truncate",
          "examples": [
            "truncate"
          ],
          "type": "string"
        },
        "endpoint_extra_args": {
          "title": "Endpoint Extra Args",
          "description": "Extra arguments to pass to endpoint method function.",
          "default": [
            10
          ],
          "type": "array",
          "items": {}
        },
        "score_thresh": {
          "title": "Score Thresh",
          "description": "Score threshold between 0.0 and 1.0 for automatic annotations to be kept.",
          "default": 0.4,
          "type": "number"
        },
        "overlap_thresh": {
          "title": "Overlap Thresh",
          "description": "Minimum weighted IoM for non-maximum suppression of detections.",
          "default": 0.4,
          "type": "number"
        },
        "edge_thresh": {
          "title": "Edge Thresh",
          "description": "Polyline annotations this close to edge of image are converted to circles.",
          "default": 20,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "ValidationConfig": {
      "title": "ValidationConfig",
      "description": "Contains settings for camfi annotator validation.",
      "type": "object",
      "properties": {
        "autoannotated_via_project_file": {
          "title": "Autoannotated Via Project File",
          "description": "Path to file containing VIA Project with annotations to validate.",
          "type": "string",
          "format": "path"
        },
        "iou_thresh": {
          "title": "Iou Thresh",
          "description": "Threshold of intersection-over-union to match annotations.",
          "default": 0.5,
          "type": "number"
        },
        "image_sets": {
          "title": "Image Sets",
          "description": "Image sets to perform training on.",
          "default": [
            "all"
          ],
          "pattern": "^(all|test|train)$",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(all|test|train)$"
          }
        },
        "output_dir": {
          "title": "Output Dir",
          "description": "If set, results of validation will be saved.",
          "format": "directory-path",
          "type": "string"
        },
        "output_stem": {
          "title": "Output Stem",
          "description": "Stem of output files.",
          "default": "validation",
          "type": "string"
        }
      }
    },
    "AnnotatorConfig": {
      "title": "AnnotatorConfig",
      "description": "Settings for automatic annotation training and inference.",
      "type": "object",
      "properties": {
        "crop": {
          "$ref": "#/definitions/BoundingBox"
        },
        "training": {
          "$ref": "#/definitions/TrainingConfig"
        },
        "inference": {
          "$ref": "#/definitions/InferenceConfig"
        },
        "validation": {
          "$ref": "#/definitions/ValidationConfig"
        }
      }
    }
  }
}
